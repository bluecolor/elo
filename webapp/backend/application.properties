
# server.port = 8080

# spring.resources.chain.cache = false
# spring.thymeleaf.enabled = false

server.session.timeout = 3600

# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true


# jdbc data source url used for repository connection
# example:
app.datasource.url = jdbc:h2:./db/app

# repository connection username
# example
app.datasource.username = sa

# repository connection password
# example
app.datasource.password = sa
app.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect



# sakura shell configuration. this is necessary to create a system user.
# otherwise you wont be able to connect to the application, without a system user.
# example - this is a simple ssh connection:
app.shell.auth.simple.user.name = user
app.shell.auth.simple.user.password = 123
app.shell.ssh.port = 2000


# app.connection.oracle.type= com.zaxxer.hikari.HikariDataSource
# app.connection.oracle.url = jdbc:oracle:thin:@localhost:49161/xe
# app.connection.oracle.username = util
# app.connection.oracle.password = util
# app.connection.oracle.driverClassName = oracle.jdbc.OracleDriver


# app.connection.db.url = jdbc:oracle:thin:@172.26.112.61:1521/pdwh0
# app.connection.db.username = C_KERTI
# app.connection.db.password = C2018Kerti


# app.elo.db.url = jdbc:oracle:thin:@localhost:1521:orcl
app.elo.db.url = jdbc:oracle:thin:@172.26.112.42:1521/PDWH0
# app.elo.db.url = jdbc:oracle:thin:@akspedwh-scan:1521/PDWH0
app.elo.db.username = util
app.elo.db.password = util
